// Code generated by mockery v2.3.0. DO NOT EDIT.

package mutatingmock

import (
	context "context"

	mutating "github.com/slok/kubewebhook/pkg/webhook/mutating"
	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Mutator is an autogenerated mock type for the Mutator type
type Mutator struct {
	mock.Mock
}

// Mutate provides a mock function with given fields: _a0, _a1
func (_m *Mutator) Mutate(_a0 context.Context, _a1 v1.Object) (*mutating.MutatorResult, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *mutating.MutatorResult
	if rf, ok := ret.Get(0).(func(context.Context, v1.Object) *mutating.MutatorResult); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mutating.MutatorResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, v1.Object) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
